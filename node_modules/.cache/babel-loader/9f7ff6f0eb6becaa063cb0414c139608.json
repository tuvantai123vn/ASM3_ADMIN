{"ast":null,"code":"import _createForOfIteratorHelper from \"/Volumes/document/GitHub/ASM3/Frontend Assignment 03/admin_shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Volumes/document/GitHub/ASM3/Frontend Assignment 03/admin_shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useContext, useLayoutEffect, useState, useMemo } from 'react';\nimport CookiesContext from './CookiesContext';\nimport { isInBrowser } from './utils';\nexport default function useCookies(dependencies) {\n  var cookies = useContext(CookiesContext);\n\n  if (!cookies) {\n    throw new Error('Missing <CookiesProvider>');\n  }\n\n  var _useState = useState(function () {\n    return cookies.getAll();\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      allCookies = _useState2[0],\n      setCookies = _useState2[1];\n\n  if (isInBrowser()) {\n    useLayoutEffect(function () {\n      function onChange() {\n        var newCookies = cookies.getAll({\n          doNotUpdate: true\n        });\n\n        if (shouldUpdate(dependencies || null, newCookies, allCookies)) {\n          setCookies(newCookies);\n        }\n      }\n\n      cookies.addChangeListener(onChange);\n      return function () {\n        cookies.removeChangeListener(onChange);\n      };\n    }, [cookies, allCookies]);\n  }\n\n  var setCookie = useMemo(function () {\n    return cookies.set.bind(cookies);\n  }, [cookies]);\n  var removeCookie = useMemo(function () {\n    return cookies.remove.bind(cookies);\n  }, [cookies]);\n  var updateCookies = useMemo(function () {\n    return cookies.update.bind(cookies);\n  }, [cookies]);\n  return [allCookies, setCookie, removeCookie, updateCookies];\n}\n\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\n  if (!dependencies) {\n    return true;\n  }\n\n  var _iterator = _createForOfIteratorHelper(dependencies),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var dependency = _step.value;\n\n      if (newCookies[dependency] !== oldCookies[dependency]) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Volumes/document/GitHub/ASM3/Frontend Assignment 03/admin_shop/node_modules/react-cookie/es6/useCookies.js"],"names":["useContext","useLayoutEffect","useState","useMemo","CookiesContext","isInBrowser","useCookies","dependencies","cookies","Error","getAll","allCookies","setCookies","onChange","newCookies","doNotUpdate","shouldUpdate","addChangeListener","removeChangeListener","setCookie","set","bind","removeCookie","remove","updateCookies","update","oldCookies","dependency"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,eAArB,EAAsCC,QAAtC,EAAgDC,OAAhD,QAA+D,OAA/D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,eAAe,SAASC,UAAT,CAAoBC,YAApB,EAAkC;AAC7C,MAAMC,OAAO,GAAGR,UAAU,CAACI,cAAD,CAA1B;;AACA,MAAI,CAACI,OAAL,EAAc;AACV,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;AAJ4C,kBAKZP,QAAQ,CAAC;AAAA,WAAMM,OAAO,CAACE,MAAR,EAAN;AAAA,GAAD,CALI;AAAA;AAAA,MAKtCC,UALsC;AAAA,MAK1BC,UAL0B;;AAM7C,MAAIP,WAAW,EAAf,EAAmB;AACfJ,IAAAA,eAAe,CAAC,YAAM;AAClB,eAASY,QAAT,GAAoB;AAChB,YAAMC,UAAU,GAAGN,OAAO,CAACE,MAAR,CAAe;AAC9BK,UAAAA,WAAW,EAAE;AADiB,SAAf,CAAnB;;AAGA,YAAIC,YAAY,CAACT,YAAY,IAAI,IAAjB,EAAuBO,UAAvB,EAAmCH,UAAnC,CAAhB,EAAgE;AAC5DC,UAAAA,UAAU,CAACE,UAAD,CAAV;AACH;AACJ;;AACDN,MAAAA,OAAO,CAACS,iBAAR,CAA0BJ,QAA1B;AACA,aAAO,YAAM;AACTL,QAAAA,OAAO,CAACU,oBAAR,CAA6BL,QAA7B;AACH,OAFD;AAGH,KAbc,EAaZ,CAACL,OAAD,EAAUG,UAAV,CAbY,CAAf;AAcH;;AACD,MAAMQ,SAAS,GAAGhB,OAAO,CAAC;AAAA,WAAMK,OAAO,CAACY,GAAR,CAAYC,IAAZ,CAAiBb,OAAjB,CAAN;AAAA,GAAD,EAAkC,CAACA,OAAD,CAAlC,CAAzB;AACA,MAAMc,YAAY,GAAGnB,OAAO,CAAC;AAAA,WAAMK,OAAO,CAACe,MAAR,CAAeF,IAAf,CAAoBb,OAApB,CAAN;AAAA,GAAD,EAAqC,CAACA,OAAD,CAArC,CAA5B;AACA,MAAMgB,aAAa,GAAGrB,OAAO,CAAC;AAAA,WAAMK,OAAO,CAACiB,MAAR,CAAeJ,IAAf,CAAoBb,OAApB,CAAN;AAAA,GAAD,EAAqC,CAACA,OAAD,CAArC,CAA7B;AACA,SAAO,CAACG,UAAD,EAAaQ,SAAb,EAAwBG,YAAxB,EAAsCE,aAAtC,CAAP;AACH;;AACD,SAASR,YAAT,CAAsBT,YAAtB,EAAoCO,UAApC,EAAgDY,UAAhD,EAA4D;AACxD,MAAI,CAACnB,YAAL,EAAmB;AACf,WAAO,IAAP;AACH;;AAHuD,6CAIjCA,YAJiC;AAAA;;AAAA;AAIxD,wDAAqC;AAAA,UAA5BoB,UAA4B;;AACjC,UAAIb,UAAU,CAACa,UAAD,CAAV,KAA2BD,UAAU,CAACC,UAAD,CAAzC,EAAuD;AACnD,eAAO,IAAP;AACH;AACJ;AARuD;AAAA;AAAA;AAAA;AAAA;;AASxD,SAAO,KAAP;AACH","sourcesContent":["import { useContext, useLayoutEffect, useState, useMemo } from 'react';\nimport CookiesContext from './CookiesContext';\nimport { isInBrowser } from './utils';\nexport default function useCookies(dependencies) {\n    const cookies = useContext(CookiesContext);\n    if (!cookies) {\n        throw new Error('Missing <CookiesProvider>');\n    }\n    const [allCookies, setCookies] = useState(() => cookies.getAll());\n    if (isInBrowser()) {\n        useLayoutEffect(() => {\n            function onChange() {\n                const newCookies = cookies.getAll({\n                    doNotUpdate: true,\n                });\n                if (shouldUpdate(dependencies || null, newCookies, allCookies)) {\n                    setCookies(newCookies);\n                }\n            }\n            cookies.addChangeListener(onChange);\n            return () => {\n                cookies.removeChangeListener(onChange);\n            };\n        }, [cookies, allCookies]);\n    }\n    const setCookie = useMemo(() => cookies.set.bind(cookies), [cookies]);\n    const removeCookie = useMemo(() => cookies.remove.bind(cookies), [cookies]);\n    const updateCookies = useMemo(() => cookies.update.bind(cookies), [cookies]);\n    return [allCookies, setCookie, removeCookie, updateCookies];\n}\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\n    if (!dependencies) {\n        return true;\n    }\n    for (let dependency of dependencies) {\n        if (newCookies[dependency] !== oldCookies[dependency]) {\n            return true;\n        }\n    }\n    return false;\n}\n"]},"metadata":{},"sourceType":"module"}